
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module VGAlogic(

	//////////// CLOCK //////////
	CLOCK_50,

	//////////// KEY //////////
	KEY,

	//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
	GPIO,
	GPIO_IN 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;

//////////// KEY //////////
input 		     [1:0]		KEY;

//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
inout 		    [33:0]		GPIO;
input 		     [1:0]		GPIO_IN;


//=======================================================
//  REG/WIRE declarations
//=======================================================
reg CLOCK_25;
wire [9:0] PIXEL_COORD_X;
wire [9:0] PIXEL_COORD_Y;
wire [7:0] PIXEL_COLOR;

wire reset;
wire [9:0] concat_location;
wire [1:0] pixel_in;
wire [1:0] pixel_out;
wire pixel_wen;

VGADriver driver(
	.CLOCK(CLOCK_25),
	.PIXEL_COLOR_IN(PIXEL_COLOR),
	.PIXEL_X(PIXEL_COORD_X),
	.PIXEL_Y(PIXEL_COORD_Y),
	.PIXEL_COLOR_OUT({GPIO[22],GPIO[20],GPIO[18],GPIO[16],GPIO[14],GPIO[12],GPIO[10],GPIO[8]}),
	.H_SYNC_NEG(GPIO[5]),
	.V_SYNC_NEG(GPIO[7])
);

blockArray pixelArray(
	.CLOCK(CLOCK_50),
	.INDEX(concat_location),
	.IN(pixel_in),
	.W_EN(pixel_wen),
	.OUT(pixel_out),
	.RESET(reset)
);

assign concat_location[9:5] = PIXEL_COORD_X[9:5]; //shift by 5
assign concat_location[4:0] = PIXEL_COORD_Y[9:5];

//=======================================================
//  Structural coding
//=======================================================
always @(posedge CLOCK_50) begin
	CLOCK_25 <= ~CLOCK_25;
end

assign reset = ~KEY[0];
assign pixel_wen = 0; //not writing
assign pixel_in = 0; //not writing
assign PIXEL_COLOR = (pixel_out == 1 ? 8'b11111100 : 8'b00000011);

endmodule
